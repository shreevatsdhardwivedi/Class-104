{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded) {\n        return _jsx(AppLoading, {});\n      } else {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.appTitleTextContainer,\n            children: _jsx(Text, {\n              style: styles.appTitleText,\n              children: \"Welcome To Storytelling App\"\n            })\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: _jsx(Image, {\n              source: require(\"../assets/story_image_1.png\"),\n              style: styles.storyImage\n            })\n          }), _jsx(View, {\n            style: styles.textContainer,\n            children: \"Note: Use the navigation to read stories.\"\n          }), _jsx(View, {\n            style: {\n              flex: 0.08\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  storyImage: {\n    width: \"90%\",\n    height: RFValue(250),\n    alignSelf: \"center\"\n  },\n  textContainer: {\n    paddingTop: RFValue(20),\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","Component","RFValue","AppLoading","Font","FlatList","customFonts","require","Home","props","state","fontsLoaded","loadAsync","setState","_loadFontsAsync","styles","container","appTitleTextContainer","appTitleText","cardContainer","storyImage","textContainer","flex","StyleSheet","create","backgroundColor","justifyContent","textAlign","color","fontSize","fontFamily","width","height","alignSelf","paddingTop"],"sources":["C:/Users/pushk/Documents/STA-2/screens/Home.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {  View,  Text,  StyleSheet,  SafeAreaView,  Platform,  StatusBar,  Image} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\r\n};\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>Welcome To Storytelling App</Text>\r\n            </View>\r\n          <View style={styles.cardContainer}>\r\n              <Image\r\n              source={require(\"../assets/story_image_1.png\")}\r\n              style={styles.storyImage}\r\n            ></Image>\r\n            \r\n          </View>\r\n          <View style={styles.textContainer}>\r\n            Note: Use the navigation to read stories.\r\n          </View>\r\n          \r\n          <View style={{ flex: 0.08 }} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\"\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\",\r\n    textAlign:\"center\"\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\"\r\n  },\r\n  storyImage:{\r\n    width:\"90%\",\r\n    height: RFValue(250),\r\n    alignSelf: \"center\",\r\n    \r\n  },\r\n  textContainer:{\r\n    paddingTop:RFValue(20),\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    textAlign:\"center\"\r\n  }\r\n});\r\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,8BAAzB;;;AAEA,IAAIC,WAAW,GAAG;EAChB,kBAAkBC,OAAO;AADT,CAAlB;;IAKqBC,I;;;;;EACnB,cAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,WAAW,EAAE;IADF,CAAb;IAFiB;EAKlB;;;;WAED;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACQP,IAAI,CAACQ,SAAL,CAAeN,WAAf,CADR;;YAAA;cAEE,KAAKO,QAAL,CAAc;gBAAEF,WAAW,EAAE;cAAf,CAAd;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAKA,6BAAoB;MAClB,KAAKG,eAAL;IACD;;;WAED,kBAAS;MACP,IAAI,CAAC,KAAKJ,KAAL,CAAWC,WAAhB,EAA6B;QAC3B,OAAO,KAAC,UAAD,KAAP;MACD,CAFD,MAEO;QACL,OACE,MAAC,IAAD;UAAM,KAAK,EAAEI,MAAM,CAACC,SAApB;UAAA,WACI,KAAC,IAAD;YAAM,KAAK,EAAED,MAAM,CAACE,qBAApB;YAAA,UACE,KAAC,IAAD;cAAM,KAAK,EAAEF,MAAM,CAACG,YAApB;cAAA;YAAA;UADF,EADJ,EAIE,KAAC,IAAD;YAAM,KAAK,EAAEH,MAAM,CAACI,aAApB;YAAA,UACI,KAAC,KAAD;cACA,MAAM,EAAEZ,OAAO,+BADf;cAEA,KAAK,EAAEQ,MAAM,CAACK;YAFd;UADJ,EAJF,EAWE,KAAC,IAAD;YAAM,KAAK,EAAEL,MAAM,CAACM,aAApB;YAAA;UAAA,EAXF,EAeE,KAAC,IAAD;YAAM,KAAK,EAAE;cAAEC,IAAI,EAAE;YAAR;UAAb,EAfF;QAAA,EADF;MAmBD;IACF;;;;EAzC+BrB,S;;SAAbO,I;AA4CrB,IAAMO,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETG,eAAe,EAAE;EAFR,CADoB;EAK/BR,qBAAqB,EAAE;IACrBK,IAAI,EAAE,GADe;IAErBI,cAAc,EAAE,QAFK;IAGrBC,SAAS,EAAC;EAHW,CALQ;EAU/BT,YAAY,EAAE;IACZU,KAAK,EAAE,OADK;IAEZC,QAAQ,EAAE3B,OAAO,CAAC,EAAD,CAFL;IAGZ4B,UAAU,EAAE;EAHA,CAViB;EAe/BV,UAAU,EAAC;IACTW,KAAK,EAAC,KADG;IAETC,MAAM,EAAE9B,OAAO,CAAC,GAAD,CAFN;IAGT+B,SAAS,EAAE;EAHF,CAfoB;EAqB/BZ,aAAa,EAAC;IACZa,UAAU,EAAChC,OAAO,CAAC,EAAD,CADN;IAEZ0B,KAAK,EAAE,OAFK;IAGZC,QAAQ,EAAE3B,OAAO,CAAC,EAAD,CAHL;IAIZ4B,UAAU,EAAE,gBAJA;IAKZH,SAAS,EAAC;EALE;AArBiB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}